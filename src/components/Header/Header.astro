---
import Button from "@components/Button.astro";
import LinkTopNav from "./LinkTopNav.astro";
import Language from "./Language.astro";
import LinkPicker from "./LinkPicker.astro";
import Hamburger from "./Hamburger.astro";

const links=[ //C'est la seule variable à modifier dans le header, le reste se fait tout seul
    {
        pickerTitle: "Consultations",
        links: [
            {
                title: "Soins énergétiques",
                href: `${import.meta.env.BASE_URL}soins-energetiques`
            },
            {
                title: "Rituels et coaching",
                href: `${import.meta.env.BASE_URL}rituels-coachings`
            },
            {
                title: "Consultation Voyance",
                href: `${import.meta.env.BASE_URL}consultation-voyance`
            }
        ]
    },
    {
        pickerTitle: "portrait",
        links: [
            {
                title: "",
                href: `${import.meta.env.BASE_URL}portrait`
            }
        ]
    },
    {
        pickerTitle: "Contact",
        links: [
            {
                title: "",
                href: `${import.meta.env.BASE_URL}contact`
            }
        ]
    }, 
    {
        pickerTitle: "Relations publiques",
        links: [
            {
                title: "",
                href: `${import.meta.env.BASE_URL}relations-publiques`
            }
        ]
    }, 
    {
        pickerTitle: "Consulting",
        links: [
            {
                title: "",
                href: `${import.meta.env.BASE_URL}consulting`
            }
        ]
    },
    {
        pickerTitle: "Press",
        links: [
            {
                title: "",
                href: `${import.meta.env.BASE_URL}press`
            }
        ]
    }
]
---

<nav class="h-fit flex-col place-content-center bg-black w-full top-0 fixed z-[100] duration-300 transition-transform ease-in-out">
    <div class="flex lg:flex-col pb-2 w-full justify-between border-b border-white !border-opacity-40">
        <a class="flex gap-0 flex-col text-center whitespace-nowrap  text-xl lg:text-3xl font-bold text-white px-4 p-1 group no-underline place-content-center items-center place-self-center hover:scale-x-105 duration-300" href={`${import.meta.env.BASE_URL}`}>
            NICOLAS ABRY
            <div class="self-center uppercase flex text-xs text-opacity-70 text-white">The celestial light</div>
        </a>
        <div 
            id="nav"
            style="max-height:100px; transition:max-height 0.5s ease-out"
            class="hidden lg:flex justify-between lg:w-full max-h-26 z-50 bg-black self-center max-w-[1312px] lg:justify-between w-full overflow-hidden">
            {
                links.map((link) => {
                    if (link.links.length > 1) {
                        return (
                            <LinkPicker pickerTitle={link.pickerTitle} links={link.links}/>
                        )
                    }
                    return(
                    <LinkTopNav title={link.pickerTitle} href={link.links[0].href}/>
                )
                })
            }
            <Button href="/contact" title="Contactez-moi"/>
            <Language />
        </div>
        <div class="flex gap-4 px-4 lg:hidden">
            <Language />
            <Hamburger />
        </div>
    </div>
    <div 
        id="menuList" 
        style="max-height:0px; transition:max-height 0.5s ease-out" 
        class="flex lg:hidden transition-all overflow-hidden flex-col bg-black w-full h-screen right-0 left-0 top-20 z-40 space-y-6">
        <div class="flex flex-col gap-4 p-6">
            {
                links.map((link) => {
                    if (link.links.length > 1) {
                        return (
                            <LinkPicker pickerTitle={link.pickerTitle} links={link.links}/>
                        )
                    }
                    return(
                    <LinkTopNav title={link.pickerTitle} href={link.links[0].href}/>
                )
                })
            }
        </div>
    </div>
</nav>

<script>
    let lastScrollTop =window.scrollY || document.documentElement.scrollTop;
    window.addEventListener('scroll',
        function handleScroll() {
            const menuList = document.getElementById('menuList');
            if (menuList && menuList.style.maxHeight === '100vh') {return}
            if (window.innerWidth <= 1024) {return}
            const scrollTopPosition =window.scrollY || document.documentElement.scrollTop;
            const nav = this.document.getElementById("nav") as HTMLElement;
            if(nav){
                if (scrollTopPosition > lastScrollTop) {
                    nav.style.maxHeight = '0px';
                } else if (scrollTopPosition < lastScrollTop) {
                    nav.style.maxHeight = '100px';
                }
                lastScrollTop = scrollTopPosition <= 0 ? 0 : scrollTopPosition;
            }
        },
        false,
    );
</script>

<script>
    const menuButton = document.getElementById('menuButton');
    const menuList = document.getElementById('menuList');
    const span1 = document.getElementById('span1');
    const span2 = document.getElementById('span2');
    const span3 = document.getElementById('span3');

    menuButton?.addEventListener('click', () => {
        if (menuList) {
            const max = (menuList.style.maxHeight === '0px') ? '100vh' : '0px';
            menuList.style.maxHeight = max;
        }
        span1?.classList.toggle('-rotate-45');
        span1?.classList.toggle('translate-y-[9.5px]');
        span2?.classList.toggle('invisible');
        span3?.classList.toggle('rotate-45');
        span3?.classList.toggle('translate-y-[-9.5px]');
    });
</script>